[lsm_analyse_indexes]
search = | `lsm_analyse_indexes`

[lsm_analyse_sources]
search = | `lsm_analyse(host,source)`

[lsm_analyse_sourcetypes]
search = | `lsm_analyse(index,sourcetype)`

[lsm_generate_sources_lookup]
alert.track = 0
cron_schedule = 30 * * * *
enableSched = 1
schedule_window = 15
search = | inputlookup lsm_source_lookup | table host, source, enabled, maxAge, maxStdDev | append [| tstats count as events\
    where `lsm_index_filter` earliest=1 NOT sourcetype IN(`lsm_excluded_sourcetypes`)\
    by host,source | table host, source, enabled, maxAge, maxStdDev] | dedup host,source\
    | eval enabled=coalesce(enabled,"true") | eval maxAge=coalesce(maxAge,"2h") | eval maxStdDev=coalesce(maxStdDev,1)\
    | outputlookup lsm_source_lookup

[lsm_generate_sourcetypes_lookup]
alert.track = 0
cron_schedule = 30 * * * *
enableSched = 1
schedule_window = 15
search = | inputlookup lsm_sourcetype_lookup | table index, sourcetype, enabled, maxAge, maxStdDev | append [| tstats count as events\
    where `lsm_index_filter` earliest=1 NOT sourcetype IN(`lsm_excluded_sourcetypes`)\
    by index,sourcetype | table index, sourcetype, enabled, maxAge, maxStdDev] | dedup index,sourcetype\
    | eval enabled=coalesce(enabled,"true") | eval maxAge=coalesce(maxAge,"2h") | eval maxStdDev=coalesce(maxStdDev,1)\
    | outputlookup lsm_sourcetype_lookup

[lsm_generate_forwarder_assets]
search = `lsm_forwarder_overview(30d@d)`

[lsm_forwarder_overview]
search = `lsm_forwarder_overview`

[lsm_generate_existing_indexes]
alert.track = 0
cron_schedule = 16,31,46,1 * * * *
enableSched = 1
schedule_window = 10
search = | `lsm_generate_existing_indexes`

[lsm_missing_indexes]
search = index=_internal earliest=-30d@d latest=now component=IndexerService log_level=WARN "Received event for unconfigured/disabled/deleted index" | rex "index=(?<missing_index>[^\s]+)" | rex "host=\"host::(?<from_host>[^\"]+)" | rex field=_raw "source=\"source::(?<from_source>[^\"]+)" | stats latest(_time) as _time by missing_index, from_host, from_source | reltime | table _time, from_host, from_source, missing_index, reltime | rename _time AS Timestamp, from_host AS "Source host", from_source AS Source, missing_index AS "Missing index", reltime AS Since | convert ctime(Timestamp) | lookup update=t lsm_existing_indexes index AS "Missing index" | where NOT exists = "true" | fields - exists

[lsm_generate_puncts]
search = `lsm_punct_index_filter` | stats count by punct,sourcetype | eval new = "false" | outputlookup lsm_puncts

[lsm_new_puncts]
search = `lsm_punct_index_filter` | stats count by punct,sourcetype | lookup update=t lsm_puncts punct,sourcetype output new | eval new = coalesce(new, "true") | where new = "true"

[lsm_index_monitor_table]
search = | dbinspect index=*\
    | search NOT index=_*\
    | stats sum(eventCount) as totalCount max(modTime) as recentTime min(startEpoch) as firstTime max(endEpoch) as lastTime by index | convert timeformat="%m/%d/%Y:%H:%M:%S" mktime(recentTime)\
    | eval expectedLastTime=strftime(relative_time(now(), "-".`lsm_max_index_age`),"%s")\
    | eval noEventsSince=tostring((now() - lastTime), "duration")\
    | eval ok=if(lastTime<expectedLastTime, 0, 1)\
    | table index, lastTime, noEventsSince, ok\
    | `hr_duration("noEventsSince")`\
    | convert ctime(firstTime), ctime(lastTime), ctime(recentTime), ctime(expectedLastTime)\
    | replace 1 WITH "Ok", 0 WITH "Outdated" IN ok\
    | rename index AS Index, lastTime AS "Last time", noEventsSince AS "No events since", ok AS Status
