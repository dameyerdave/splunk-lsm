[lsm_analyse_sources]
search = | tstats count as events\
where `lsm_index_filter` earliest=-30d@h latest=-`lsm_span`@h NOT sourcetype IN(`lsm_excluded_sourcetypes`)\
by host,source,_time span=`lsm_span`\
| eval dow = lower(strftime(_time, "%A"))\
| where NOT dow IN("saturday", "sunday")\
| lookup update=t lsm_sources host source \
| where enabled="true"\
| stats avg(events) as avg_events stdev(events) as stdev_events by host,source,maxAge,maxStdDev\
| join type=left host,source\
[\
| tstats count as events\
where `lsm_index_filter` earliest=-`lsm_span` NOT sourcetype IN(`lsm_excluded_sourcetypes`)\
by host,source\
| stats sum(events) as events by host,source\
]\
| join type=left host,source\
[\
| tstats latest(_time) as lastTime where `lsm_index_filter` earliest=-30d@h latest=now NOT sourcetype IN(`lsm_excluded_sourcetypes`) by host,source\
]\
| eval latestTime = relative_time(now(), printf("-%s", maxAge))\
| fillnull value=0 events\
| eval diff=abs(avg_events-events)\
| eval prc=round(abs(100-(events/avg_events*100)),2)\
| eval status = case(lastTime < latestTime, "outage", diff > maxStdDev*stdev_events AND avg_events > events, "underload", diff > maxStdDev*stdev_events AND avg_events < events, "overload", 1==1, "ok")\
| eval _time = lastTime\
| reltime

[lsm_analyse_sourcetypes]
search = | tstats count as events\
where `lsm_index_filter` earliest=-30d@h latest=-`lsm_span`@h NOT sourcetype IN(`lsm_excluded_sourcetypes`)\
by index,sourcetype,_time span=`lsm_span`\
| eval dow = lower(strftime(_time, "%A"))\
| where NOT dow IN("saturday", "sunday")\
| lookup update=t lsm_sourcetypes index sourcetype \
| where enabled="true"\
| stats avg(events) as avg_events stdev(events) as stdev_events\
by index,sourcetype,maxAge,maxStdDev\
| join type=left index,sourcetype\
[\
| tstats count as events\
where `lsm_index_filter` earliest=-`lsm_span` NOT sourcetype IN(`lsm_excluded_sourcetypes`)\
by index,sourcetype\
| stats sum(events) as events by index,sourcetype\
]\
| join type=left index,sourcetype\
[\
| tstats latest(_time) as lastTime where `lsm_index_filter` earliest=-30d@h latest=now NOT sourcetype IN(`lsm_excluded_sourcetypes`)\
by index,sourcetype\
]\
| eval latestTime = relative_time(now(), printf("-%s", maxAge))\
| fillnull value=0 events\
| eval diff=abs(avg_events-events)\
| eval prc=round(abs(100-(events/avg_events*100)),2)\
| eval status = case(lastTime < latestTime, "outage", diff > maxStdDev*stdev_events AND avg_events > events, "underload", diff > maxStdDev*stdev_events AND avg_events < events, "overload", 1==1, "ok")\
| eval _time = lastTime\
| reltime

[lsm_invalid_sources]
search = | savedsearch lsm_analyse_sources\ 
| where status != "ok"

[lsm_valid_sources]
search = | savedsearch lsm_analyse_sources\ 
| where status == "ok"

[lsm_generate_sources_lookup]
alert.track = 0
cron_schedule = 30 * * * *
enableSched = 1
schedule_window = 15
search = | inputlookup lsm_sources | table host, source, enabled, maxAge, maxStdDev | append [| tstats count as events\
where `lsm_index_filter` earliest=1 NOT sourcetype IN(`lsm_excluded_sourcetypes`)\
by host,source | table host, source, enabled, maxAge, maxStdDev] | dedup host,source\
| eval enabled=coalesce(enabled,"true") | eval maxAge=coalesce(maxAge,"2h") | eval maxStdDev=coalesce(maxStdDev,1)\
| outputlookup lsm_sources

[lsm_generate_sourcetypes_lookup]
alert.track = 0
cron_schedule = 30 * * * *
enableSched = 1
schedule_window = 15
search = | inputlookup lsm_sourcetypes | table index, sourcetype, enabled, maxAge, maxStdDev | append [| tstats count as events\
where `lsm_index_filter` earliest=1 NOT sourcetype IN(`lsm_excluded_sourcetypes`)\
by index,sourcetype | table index, sourcetype, enabled, maxAge, maxStdDev] | dedup index,sourcetype\
| eval enabled=coalesce(enabled,"true") | eval maxAge=coalesce(maxAge,"2h") | eval maxStdDev=coalesce(maxStdDev,1)\
| outputlookup lsm_sourcetypes

[lsm_forwarder_overview]
search = `lsm_get_forwarder_tcpin` hostname=* earliest=-`lsm_missing_forwarder_time`\
| eval source_uri = hostname.":".sourcePort\
| eval dest_uri = host.":".destPort\
| eval connection = source_uri."->".dest_uri\
| stats latest(_time) as _time, values(fwdType) as fwdType, values(sourceIp) as sourceIp, latest(version) as version,  values(os) as os, values(arch) as arch, dc(dest_uri) as dest_count, dc(connection) as connection_count, avg(tcp_KBps) as avg_tcp_kbps, avg(tcp_eps) as avg_tcp_eps, values(host) as Destinations, sum(kb) as sum_kb by hostname, guid\
| eval avg_tcp_kbps = round(avg_tcp_kbps, 2)\
| eval avg_tcp_eps = round(avg_tcp_eps, 2)\
| `lsm_rename_forwarder_type(fwdType)`\
| reltime\
| fields - _time\
| rename reltime as "Last seen", hostname as Instance, fwdType as "Forwarder Type", sourceIp as IP, version as "Splunk Version", os as OS, arch as Architecture, guid as GUID, dest_count as "Receiver Count", connection_count as "Connection Count", avg_tcp_kbps as "Average KB/s", avg_tcp_eps as "Average Events/s"\
| inputlookup append=true lsm_forwarder_assets\
| dedup GUID\
| `lsm_eval_forwarder_status`\
| outputlookup lsm_forwarder_assets\
| sort - Status 
